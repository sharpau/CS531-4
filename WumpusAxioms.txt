succ(1,0).
succ(2,1).
succ(3,2).
At(Agent, [0,0], 0).

Adjacent([x,y],[u,v]) <-> x=u & (succ(v,y) | succ(y,v)) | y=v & (succ(u,x) | succ(x,u)).
At(Agent, [x,y], u) & Breeze(u) -> Breezy([x,y]).
At(Agent, [x,y], u) <-> Visited([x,y]).
-Breezy([x,y]) & Adjacent([x,y],[u,v]) -> -Pit([u,v]).
-Stench([x,y]) & Adjacent([x,y],[u,v]) -> -At(Wumpus, [u,v], t).

Safe([x,y]) <-> (-At(Wumpus, [x,y], t) & -Pit([x,y])) | Visited([x,y]).




Breezy([x,y]) <-> exists u exists v Adjacent([x,y],[u,v]) & Pit([u,v]).
Safe([x,y])<-> -At(Wumpus,[x,y],t) & -Pit([x,y]).
Pit([x,y]) & Adjacent([x,y],[u,v]) -> Breezy([u,v]).



Breezy([x,y]) <-> 

useful test case:
	given:
	Breezy([1,0]).
	Breezy([0,1]).
	-Pit([2,1]).
	-Pit([1,1]).
	-Pit([1,2]).

	should be able to prove
	Pit([0,0]).
